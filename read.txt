# 这是一个文本文件，测试git
# 刚刚完成了一个新的命令学习：
# 1、git init
# 2、git add <file>
# 3、git commit -m 'xxx'
# 4、查看git 状态
	git status #告诉你现在git的状态，是否有修改，是否有提交修改
# 5、查看最近修改
	git diff #没有提交的修改会以绿色标注出来
# 准备学习版本回退
# 6、使用git log查看提交版本
# 7、使用 git reset --hard HEAD^ 回退到上一个版本，其中^代表上一个，^^代表上上一个，依次类推
	git reset --hard HEAD^
# 8、使用git reset --hard <commit id>可以转到任意版本，包括回到过去，现在。
	git reset --hard 246b7d3
# 9、时光穿梭前，通过 git reflog 查看历史命令，找到commit id
	git reflog

# 10、git add \<filename\>把文件添加进去，实际上就是把文件修改添加到暂存区；git commit -m ‘xxx’提交修改，把暂存区的所有内容提交到当前分支
_我们创建版本库时，Git自动创建了master分支_

# 11、Git 跟踪的是文件的修改，而非文件
#12、(1)改乱了工作区某个文件内容（修改文件了，没有提交到暂存区),使用命令 git checkout --<filename>
	 (2)已经提交到暂存区，想放弃修改，分两步走：第一步使用命令 git reset HEAD <filename>;第二步使用命令 git checkout --<filename>
	 (3)已经提交到版本库时，要撤销修改，使用版本回退，分两步走：第一步使用命令git reflog，查看 commit id;第二步使用命令 git reset --hard <commit id>
	 

